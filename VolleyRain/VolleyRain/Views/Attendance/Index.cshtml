@model VolleyRain.Models.AttendanceMatrix

@{
    ViewBag.Title = "Anwesenheitskontrolle";
    var pagination = ViewBag.Pagination as VolleyRain.Models.Pagination;
}

<h2>Anwesenheitskontrolle <small>Team SVKT Rain</small></h2>

<div class="pager">
    @Html.PreviousPageButton(pagination, "Zurück")
    @Html.NextPageButton(pagination, "Weiter")
    <a href="@Url.Action("Edit")" class="btn btn-success">Bearbeiten</a>
</div>

<table class="table table-condensed">
    <thead>
        <tr>
            <th></th>

            @foreach (var item in Model.Events) { 
            
                <th class="@item.GetCssClass()">@Html.FormatValue(item.Start, "{0:ddd, dd.MM. HH:mm}")</th>
                
            }

        </tr>
    </thead>

    @foreach (var user in Model.Users) { 
    
        <tr>

            <td>@Html.DisplayFor(model => user.DisplayName)</td>

            @foreach (var item in Model.Events) {

                var attendance = Model.GetAttendanceFor(user, item);
                var tdBuilder = new TagBuilder("td");
                if (attendance != null)
                {
                    tdBuilder.MergeAttribute("class", attendance.GetCssClass());
                    var divBuilder = new TagBuilder("div");
                    if (attendance.HasComment)
                    {
                        divBuilder.MergeAttribute("class", "with-comment");
                        divBuilder.MergeAttribute("data-toggle", "tooltip");
                        divBuilder.MergeAttribute("title", attendance.Comment);
                    }
                    divBuilder.SetInnerText(attendance.TypeName);
                    tdBuilder.InnerHtml = divBuilder.ToString();
                }
                @Html.Raw(tdBuilder.ToString());
            }

        </tr>
        
    }

    <tfoot>
        <tr>
            <th></th>

            @foreach (var item in Model.Events) { 
            
                <th>@Model.GetAttendeesFor(item)</th>
                
            }

        </tr>
    </tfoot>

</table>

@{
    var eventTypes = ViewBag.EventTypes as IList<EventType>;
    var attendanceTypes = ViewBag.AttendanceTypes as IList<AttendanceType>;
}

<div class="row">
    <div class="col-sm-6">
        <h3>Legende <small>Anlässe</small></h3>
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th></th>
                    <th>@Html.DisplayNameFor(model => eventTypes[0].ShortName)</th>
                    <th>@Html.DisplayNameFor(model => eventTypes[0].Name)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var type in eventTypes)
                { 
                    <tr>
                        <td><div class="@type.GetCssClass()">&nbsp;</div></td>
                        <td>@Html.DisplayFor(model => type.ShortName)</td>
                        <td>@Html.DisplayFor(model => type.Name)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-sm-6">
        <h3>Legende <small>Zustände</small></h3>
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th></th>
                    <th>@Html.DisplayNameFor(model => attendanceTypes[0].ShortName)</th>
                    <th>@Html.DisplayNameFor(model => attendanceTypes[0].Name)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var type in attendanceTypes)
                { 
                    <tr>
                        <td><div class="@type.GetCssClass()">&nbsp;</div></td>
                        <td>@Html.DisplayFor(model => type.ShortName)</td>
                        <td>@Html.DisplayFor(model => type.Name)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    $(function () {
        $('.with-comment').tooltip();
    });
</script>